'use strict';

module.exports = {
  up: async (queryInterface, Sequelize) => {
    await queryInterface.bulkInsert('questions', [
      // ========================================================
      // section 1, unit 1, lesson 1 {1.1.1} - Programming Basics
      // ==========================================================
      {
        id: 1,
        lesson_id: 1, // Updated to integer
        question: 'What do computers understand?',
        type: 'multiple_choice',
        options: JSON.stringify(['English and Arabic', 'Colors and shapes', '0s and 1s', 'Funny sounds']),
        correct_answer: '0s and 1s',
        hint: 'Computers only understand on/off switches! üí°',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 2,
        lesson_id: 1, // Updated to integer
        question: 'What is easier than writing 0s and 1s?',
        type: 'multiple_choice',
        options: JSON.stringify(['Drawing pictures', 'Using programming languages', 'Counting stars', 'Writing a book']),
        correct_answer: 'Using programming languages',
        hint: 'Special computer words! ‚ú®',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 3,
        lesson_id: 1, // Updated to integer
        question: 'What does "programming" help us do?',
        type: 'multiple_choice',
        options: JSON.stringify(['Teach a computer how to cook', 'Tell a computer exactly what to do', 'Make friends with a computer', 'Turn a computer into a toy']),
        correct_answer: 'Tell a computer exactly what to do',
        hint: 'Like teaching a robot! ü§ñ',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 4,
        lesson_id: 1, // Updated to integer
        question: 'What do we call giving instructions to a computer?',
        type: 'multiple_choice',
        options: JSON.stringify(['Programming', 'Painting', 'Storytelling', 'Singing']),
        correct_answer: 'Programming',
        hint: 'Writing computer recipes! üìù',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 5,
        lesson_id: 1, // Updated to integer
        question: 'What kind of information do computers truly understand?',
        type: 'multiple_choice',
        options: JSON.stringify(['Spoken languages', 'Colors and shapes', '0s and 1s', 'Silly noises']),
        correct_answer: '0s and 1s',
        hint: 'Just two numbers! 0Ô∏è‚É£1Ô∏è‚É£',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 6,
        lesson_id: 1, // Updated to integer
        question: 'What makes it simpler to communicate with computers?',
        type: 'multiple_choice',
        options: JSON.stringify(['Drawings', 'Programming languages', 'Counting stars', 'Writing stories']),
        correct_answer: 'Programming languages',
        hint: 'Special computer translator! üåê',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 7,
        lesson_id: 1, // Updated to integer
        question: 'What is the main purpose of programming?',
        type: 'multiple_choice',
        options: JSON.stringify(['Bake cookies', 'Give step-by-step instructions', 'Make friends', 'Create toys']),
        correct_answer: 'Give step-by-step instructions',
        hint: 'Like a treasure map! üó∫Ô∏è',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },
      {
        id: 8,
        lesson_id: 1, // Updated to integer
        question: 'What‚Äôs writing computer instructions called?',
        type: 'multiple_choice',
        options: JSON.stringify(['Programming', 'Drawing', 'Storytelling', 'Singing']),
        correct_answer: 'Programming',
        hint: 'Building with code blocks! üß±',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 9,
        lesson_id: 1, // Updated to integer
        question: 'Why use programming languages?',
        type: 'multiple_choice',
        options: JSON.stringify(['Talk to computers', 'Make music', 'Learn human languages', 'Decorate computers']),
        correct_answer: 'Talk to computers',
        hint: 'Computer translator! üó£Ô∏èüíª',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },
      {
        id: 10,
        lesson_id: 1, // Updated to integer
        question: 'What happens when we write a program?',
        type: 'multiple_choice',
        options: JSON.stringify(['Computer thinks', 'Computer follows instructions', 'Computer talks', 'Computer gets smart']),
        correct_answer: 'Computer follows instructions',
        hint: 'Good listener! üëÇ',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 11,
        lesson_id: 1, // Updated to integer
        question: 'How does programming help us?',
        type: 'multiple_choice',
        options: JSON.stringify(['Chat faster', 'Do tasks quickly', 'Teach eating', 'Watch TV']),
        correct_answer: 'Do tasks quickly',
        hint: 'Super fast helper! ‚ö°',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },
      {
        id: 12,
        lesson_id: 1, // Updated to integer
        question: 'Programming is like asking a robot for help.',
        type: 'true_false',
        options: JSON.stringify(['True', 'False']),
        correct_answer: 'True',
        hint: 'Robot helper! ü§ñ',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 13,
        lesson_id: 1, // Updated to integer
        question: 'Computers understand English/Arabic.',
        type: 'true_false',
        options: JSON.stringify(['True', 'False']),
        correct_answer: 'False',
        hint: 'Need secret code! üîê',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 14,
        lesson_id: 1, // Updated to integer
        question: 'Computers only understand 0s/1s.',
        type: 'true_false',
        options: JSON.stringify(['True', 'False']),
        correct_answer: 'True',
        hint: 'Only two numbers! 0Ô∏è‚É£1Ô∏è‚É£',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 15,
        lesson_id: 1, // Updated to integer
        question: 'Programming languages translate for computers.',
        type: 'true_false',
        options: JSON.stringify(['True', 'False']),
        correct_answer: 'True',
        hint: 'Like a dictionary! üìñ',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 16,
        lesson_id: 1, // Updated to integer
        question: 'Writing 0s/1s is easy for humans.',
        type: 'true_false',
        options: JSON.stringify(['True', 'False']),
        correct_answer: 'False',
        hint: 'Too complicated! üòµ',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 17,
        lesson_id: 1, // Updated to integer
        question: 'Computers understand instructions without translation.',
        type: 'true_false',
        options: JSON.stringify(['True', 'False']),
        correct_answer: 'False',
        hint: 'Need translation! üîÑ',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },

      // ========================
      // section 1, unit 2, lesson 1 {1.2.1} - Python Introduction
      // ========================
      {
        id: 18,
        lesson_id: 2, // Updated to integer
        question: 'What is Python?',
        type: 'multiple_choice',
        options: JSON.stringify(['Snake', 'Programming tool', 'Game', 'Robot']),
        correct_answer: 'Programming tool',
        hint: 'Coding language! üêç',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 19,
        lesson_id: 2, // Updated to integer
        question: 'What can you do with Python?',
        type: 'multiple_choice',
        options: JSON.stringify(['Math, art, games', 'Bake', 'Ride bike', 'Play soccer']),
        correct_answer: 'Math, art, games',
        hint: 'Create cool stuff! üé®',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 20,
        lesson_id: 2, // Updated to integer
        question: 'Best thing about Python?',
        type: 'multiple_choice',
        options: JSON.stringify(['Hard to learn', 'Needs lots of code', 'Does much with little code', 'Makes sleep']),
        correct_answer: 'Does much with little code',
        hint: 'Small code, big power! üí™',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },
      {
        id: 21,
        lesson_id: 2, // Updated to integer
        question: 'What can Python help do?',
        type: 'multiple_choice',
        options: JSON.stringify(['Math', 'Say hello', 'Make games', 'All']),
        correct_answer: 'All',
        hint: 'Super tool! ü¶∏',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 22,
        lesson_id: 2, // Updated to integer
        question: 'Who can learn Python?',
        type: 'multiple_choice',
        options: JSON.stringify(['Scientists only', 'Everyone', 'Adults only', 'Robots']),
        correct_answer: 'Everyone',
        hint: 'Kids can too! üëßüë¶',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 23,
        lesson_id: 2, // Updated to integer
        question: 'How to make computer say your name?',
        type: 'multiple_choice',
        options: JSON.stringify(['Python', 'Phone', 'Calculator', 'Dictionary']),
        correct_answer: 'Python',
        hint: 'Code can talk! üó£Ô∏è',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 24,
        lesson_id: 2, // Updated to integer
        question: 'What happens with Python code?',
        type: 'multiple_choice',
        options: JSON.stringify(['Computer listens', 'Turns off', 'Ignores', 'Sings']),
        correct_answer: 'Computer listens',
        hint: 'Good listener! üëÇ',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 25,
        lesson_id: 2, // Updated to integer
        question: 'What is Python used for?',
        type: 'multiple_choice',
        options: JSON.stringify(['Math only', 'Games only', 'Many things', 'Scientists only']),
        correct_answer: 'Many things',
        hint: 'Super versatile! üöÄ',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },
      {
        id: 26,
        lesson_id: 2, // Updated to integer
        question: 'How hard is Python?',
        type: 'multiple_choice',
        options: JSON.stringify(['Easy', 'Impossible', '10 years', 'Adults only']),
        correct_answer: 'Easy',
        hint: 'Like ABCs! üî§',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 27,
        lesson_id: 2, // Updated to integer
        question: 'Why is Python fun?',
        type: 'multiple_choice',
        options: JSON.stringify(['Hard', 'Makes cool stuff', 'Only pictures', 'Snake name']),
        correct_answer: 'Makes cool stuff',
        hint: 'Create magic! ‚ú®',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 28,
        lesson_id: 2, // Updated to integer
        question: 'Python is for...',
        type: 'multiple_choice',
        options: JSON.stringify(['Everyone', 'Scientists', 'Game', 'Numbers only']),
        correct_answer: 'Everyone',
        hint: 'All can learn! üë™',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },

      // ==================================================
      // section 1, unit 2, lesson 2 {1.2.2} - Python Print
      // ===================================================
      {
        id: 29,
        lesson_id: 3, // Updated to integer
        question: 'What does print() do?',
        type: 'multiple_choice',
        options: JSON.stringify(['Shows on screen', 'Prints paper', 'Dances', 'Turns off']),
        correct_answer: 'Shows on screen',
        hint: 'Screen display! üñ•Ô∏è',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 30,
        lesson_id: 3, // Updated to integer
        question: 'How to show a word?',
        type: 'multiple_choice',
        options: JSON.stringify(['print("Hello")', 'print(Hello)', 'show[Hello]', 'word(Hello)']),
        correct_answer: 'print("Hello")',
        hint: 'Use quotes! ‚úèÔ∏è',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 31,
        lesson_id: 3, // Updated to integer
        question: 'How to show a number?',
        type: 'multiple_choice',
        options: JSON.stringify(['print(5)', 'print("5")', 'number(5)', 'show[5]']),
        correct_answer: 'print(5)',
        hint: 'No quotes needed! üî¢',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 32,
        lesson_id: 3, // Updated to integer
        question: 'How to show 2+2 result?',
        type: 'multiple_choice',
        options: JSON.stringify(['print(2+2)', 'math(2+2)', 'print(2,2)', 'result[2+2]']),
        correct_answer: 'print(2+2)',
        hint: 'Let computer calculate! ‚ûï',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },
      {
        id: 33,
        lesson_id: 3, // Updated to integer
        question: 'What does print("Fun!") show?',
        type: 'multiple_choice',
        options: JSON.stringify(['Fun!', 'Hard!', 'Nothing', 'Error']),
        correct_answer: 'Fun!',
        hint: 'Exact copy! üëØ',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 34,
        lesson_id: 3, // Updated to integer
        question: 'Why use quotes?',
        type: 'multiple_choice',
        options: JSON.stringify(['Show text', 'Count letters', 'Confuse', 'Longer code']),
        correct_answer: 'Show text',
        hint: 'Words need quotes! üìù',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 35,
        lesson_id: 3, // Updated to integer
        question: 'What if no print()?',
        type: 'multiple_choice',
        options: JSON.stringify(['No display', 'Still shows', 'Draws', 'Stops']),
        correct_answer: 'No display',
        hint: 'Need print to see! üëÄ',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 36,
        lesson_id: 3, // Updated to integer
        question: 'Correct way to print "Hello"?',
        type: 'multiple_choice',
        options: JSON.stringify(['print("Hello")', 'print(Hello)', 'print[Hello]', 'print/Hello/']),
        correct_answer: 'print("Hello")',
        hint: 'Quotes matter! üîë',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 37,
        lesson_id: 3, // Updated to integer
        question: 'Print helps...',
        type: 'multiple_choice',
        options: JSON.stringify(['Make website', 'Show results', 'Run computer', 'Draw']),
        correct_answer: 'Show results',
        hint: 'See your work! üëÅÔ∏è',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 38,
        lesson_id: 3, // Updated to integer
        question: 'How to print 8-2?',
        type: 'multiple_choice',
        options: JSON.stringify(['print(8-2)', 'print[8-2]', 'print(8,2)', 'print("8-2")']),
        correct_answer: 'print(8-2)',
        hint: 'Math first! ‚ûñ',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },
      {
        id: 39,
        lesson_id: 3, // Updated to integer
        question: 'What does print("Hello World") show?',
        type: 'multiple_choice',
        options: JSON.stringify(['Hello World', 'Hello', 'World', '"Hello World"']),
        correct_answer: 'Hello World',
        hint: 'No quotes in result! üé©',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 40,
        lesson_id: 3, // Updated to integer
        question: 'How to print number 10?',
        type: 'multiple_choice',
        options: JSON.stringify(['print(10)', 'print("10")', 'number(10)', 'show(10)']),
        correct_answer: 'print(10)',
        hint: 'Numbers are easy! üòä',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 41,
        lesson_id: 3, // Updated to integer
        question: 'Print shows on screen.',
        type: 'true_false',
        options: JSON.stringify(['True', 'False']),
        correct_answer: 'True',
        hint: 'Screen time! üì∫',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 42,
        lesson_id: 3, // Updated to integer
        question: 'Print only for words.',
        type: 'true_false',
        options: JSON.stringify(['True', 'False']),
        correct_answer: 'False',
        hint: 'Numbers work too! üî¢',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 43,
        lesson_id: 3, // Updated to integer
        question: 'Print can show math results.',
        type: 'true_false',
        options: JSON.stringify(['True', 'False']),
        correct_answer: 'True',
        hint: 'Math + print = friends! üßÆ‚ù§Ô∏è',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 44,
        lesson_id: 3, // Updated to integer
        question: 'Print helps understand code.',
        type: 'true_false',
        options: JSON.stringify(['True', 'False']),
        correct_answer: 'True',
        hint: 'See what happens! üëÄ',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 45,
        lesson_id: 3, // Updated to integer
        question: 'Cannot use print to check code.',
        type: 'true_false',
        options: JSON.stringify(['True', 'False']),
        correct_answer: 'False',
        hint: 'Great for checking! ‚úîÔ∏è',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 46,
        lesson_id: 3, // Updated to integer
        question: 'Print is unimportant.',
        type: 'true_false',
        options: JSON.stringify(['True', 'False']),
        correct_answer: 'False',
        hint: 'Very useful tool! üõ†Ô∏è',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      // ==================================================
      // Section 1, Unit 2, Lesson 3 {1.2.3} - Python Comments
      // ===================================================
      {
        id: 47,
        lesson_id: 4,
        question: 'What are comments in Python?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'Notes written in the code to explain what it does',
          'A way to make the computer do magic',
          'A type of error in the code',
          'A way to turn off the computer',
        ]),
        correct_answer: 'Notes written in the code to explain what it does',
        hint: 'Think of something helpful for coders! üìù',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 48,
        lesson_id: 4,
        question: 'What does the computer do with comments in the code?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'Ignores them',
          'Reads them out loud',
          'Stops running the code',
          'Runs them as instructions',
        ]),
        correct_answer: 'Ignores them',
        hint: 'Does the computer care about notes? üôà',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 49,
        lesson_id: 4,
        question: 'How do you write a single-line comment in Python?',
        type: 'multiple_choice',
        options: JSON.stringify([
          '# This is a comment',
          '// This is a comment',
          '/* This is a comment */',
          '! This is a comment',
        ]),
        correct_answer: '# This is a comment',
        hint: 'Look for a special symbol! #Ô∏è‚É£',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 50,
        lesson_id: 4,
        question: 'What does a single-line comment start with?',
        type: 'multiple_choice',
        options: JSON.stringify(['//', '/**/', '#', '!!!']),
        correct_answer: '#',
        hint: 'It‚Äôs a tiny mark that‚Äôs big in coding! ‚úèÔ∏è',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 51,
        lesson_id: 4,
        question: 'What is a multi-line comment used for?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'To write longer explanations that take up more than one line',
          'To make the code run faster',
          'To add numbers',
          'To create errors in the code',
        ]),
        correct_answer: 'To write longer explanations that take up more than one line',
        hint: 'Think of a big story in code! üìú',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 52,
        lesson_id: 4,
        question: 'How do you write a multi-line comment in Python?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'Use # for each line',
          'Use triple quotes """ or \'\'\'',
          'Use multiple slashes ////',
          'Use a semicolon ;',
        ]),
        correct_answer: 'Use triple quotes """ or \'\'\'',
        hint: 'Something tripled up! üéâ',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 53,
        lesson_id: 4,
        question: 'What will happen if you write a comment in your code?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'The computer will ignore it and continue running the rest of the code',
          'The computer will display the comment on the screen',
          'The computer will give an error',
          'The computer will stop running the code',
        ]),
        correct_answer: 'The computer will ignore it and continue running the rest of the code',
        hint: 'Will it stop or go? üöÄ',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 54,
        lesson_id: 4,
        question: 'Which of these is an example of a single-line comment?',
        type: 'multiple_choice',
        options: JSON.stringify([
          '"""This is a comment"""',
          '# This is a comment',
          '// This is a comment',
          '-- This is a comment',
        ]),
        correct_answer: '# This is a comment',
        hint: 'One line, one symbol! #Ô∏è‚É£',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 55,
        lesson_id: 4,
        question: 'Which of these is an example of a multi-line comment?',
        type: 'multiple_choice',
        options: JSON.stringify([
          '# This is a comment',
          '"""This is a comment"""',
          '// This is a comment',
          '! This is a comment',
        ]),
        correct_answer: '"""This is a comment"""',
        hint: 'More than one line needs more than one trick! üé©',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 56,
        lesson_id: 4,
        question: 'Why do we use comments in Python code?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'To explain what the code does and make it easier to understand',
          'To make the code run faster',
          'To make the code longer',
          'To confuse the computer',
        ]),
        correct_answer: 'To explain what the code does and make it easier to understand',
        hint: 'Why write notes for others? üë•',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },
      {
        id: 57,
        lesson_id: 4,
        question: 'What will the following code do?\n# This is a comment\nprint("Hello")',
        type: 'multiple_choice',
        options: JSON.stringify([
          'It will show "Hello" and ignore the comment',
          'It will show "Hello" and display the comment',
          'It will display an error',
          'It will do nothing',
        ]),
        correct_answer: 'It will show "Hello" and ignore the comment',
        hint: 'What does print care about? üñ®Ô∏è',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 58,
        lesson_id: 4,
        question: "Which of the following is a correct multi-line comment?\n'''\nThis is a comment.\nIt explains the code.\n'''",
        type: 'multiple_choice',
        options: JSON.stringify(['Correct', 'Incorrect']),
        correct_answer: 'Correct',
        hint: 'Does it look wrapped up nicely? üéÅ',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 59,
        lesson_id: 4,
        question: 'How can comments help other people who read your code?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'They explain what the code does',
          'They make the code longer',
          'They make the code faster',
          'They confuse the reader',
        ]),
        correct_answer: 'They explain what the code does',
        hint: 'Think teamwork in coding! ü§ù',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },

      // ==================================================
      // Section 1, Unit 2, Lesson 4 {1.2.4} - Python Data Types
      // ===================================================
      {
        id: 60,
        lesson_id: 5,
        question: 'What is an integer in Python?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'A number with decimals',
          'A whole number without decimals',
          'A text value',
          'A type of error',
        ]),
        correct_answer: 'A whole number without decimals',
        hint: 'Think round numbers! üî¢',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 61,
        lesson_id: 5,
        question: 'Which of the following is an example of a float?',
        type: 'multiple_choice',
        options: JSON.stringify(['5', '"Hello"', '3.5', 'True']),
        correct_answer: '3.5',
        hint: 'Look for a dot! .‚ú®',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 62,
        lesson_id: 5,
        question: 'What is a string in Python?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'A type of number',
          'A text value enclosed in quotation marks',
          'A type of error',
          'A boolean value',
        ]),
        correct_answer: 'A text value enclosed in quotation marks',
        hint: 'Words need a hug! "ü§ó"',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 63,
        lesson_id: 5,
        question: 'What is a boolean in Python?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'A text value',
          'A number with decimals',
          'A value that can either be True or False',
          'A whole number',
        ]),
        correct_answer: 'A value that can either be True or False',
        hint: 'Think yes or no! ü§î',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 64,
        lesson_id: 5,
        question: 'What type of data is the value True in Python?',
        type: 'multiple_choice',
        options: JSON.stringify(['Integer', 'Float', 'String', 'Boolean']),
        correct_answer: 'Boolean',
        hint: 'A simple choice! ‚úÖ',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 65,
        lesson_id: 5,
        question: 'Which of the following is an example of an integer?',
        type: 'multiple_choice',
        options: JSON.stringify(['"10"', '10', '10.0', 'True']),
        correct_answer: '10',
        hint: 'No quotes, no dots! 1Ô∏è‚É£',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 66,
        lesson_id: 5,
        question: 'What will this code display?\nx = 3.5\nprint(x)',
        type: 'multiple_choice',
        options: JSON.stringify(['3', '3.5', '"3.5"', 'Error']),
        correct_answer: '3.5',
        hint: 'What‚Äôs stored in x? üåä',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 67,
        lesson_id: 5,
        question: 'What data type is the value "Hello, Python!"?',
        type: 'multiple_choice',
        options: JSON.stringify(['Integer', 'Boolean', 'String', 'Float']),
        correct_answer: 'String',
        hint: 'Words in a special wrap! "üéÅ"',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 68,
        lesson_id: 5,
        question: 'What is the output of this code?\nis_happy = True\nprint(is_happy)',
        type: 'multiple_choice',
        options: JSON.stringify(['True', '"True"', 'False', 'Error']),
        correct_answer: 'True',
        hint: 'What‚Äôs the mood? üòä',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 69,
        lesson_id: 5,
        question: 'Which of the following is a valid Python float?',
        type: 'multiple_choice',
        options: JSON.stringify(['"4"', '4.5', "'4.0'", 'True']),
        correct_answer: '4.5',
        hint: 'Spot the decimal! .üëÄ',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 70,
        lesson_id: 5,
        question: 'How do you create a string in Python?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'Use a number inside parentheses',
          'Use quotation marks around text',
          'Use a period',
          'Use square brackets',
        ]),
        correct_answer: 'Use quotation marks around text',
        hint: 'How do you dress up words? "‚ú®"',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 71,
        lesson_id: 5,
        question: 'Which of the following is a valid way to represent a Boolean value in Python?',
        type: 'multiple_choice',
        options: JSON.stringify(['1', '"True"', 'True', 'yes']),
        correct_answer: 'True',
        hint: 'Capital letter matters! üî†',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 72,
        lesson_id: 5,
        question: 'Which of the following is a valid Python float?',
        type: 'multiple_choice',
        options: JSON.stringify(['"4"', '4.0', "'4.0'", 'True']),
        correct_answer: '4.0',
        hint: 'A number with a twist! .0Ô∏è‚É£',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 73,
        lesson_id: 5,
        question: "What is the data type of x = '5' in Python?",
        type: 'multiple_choice',
        options: JSON.stringify(['Integer', 'Float', 'String', 'Boolean']),
        correct_answer: 'String',
        hint: 'What do quotes do to a number? "ü§î"',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },
      {
        id: 74,
        lesson_id: 5,
        question: 'How would you write the Boolean value for "No" in Python?',
        type: 'multiple_choice',
        options: JSON.stringify(['No', 'False', '"No"', '0']),
        correct_answer: 'False',
        hint: 'What‚Äôs the opposite of yes? ‚ùå',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 75,
        lesson_id: 6,
        question: 'What is a variable in Python?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'A box where we store information to use later',
          'A type of computer memory',
          'A tool to solve math problems only',
          'A way to turn off the computer',
        ]),
        correct_answer: 'A box where we store information to use later',
        hint: 'Think of a storage container! üì¶',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 76,
        lesson_id: 6,
        question: 'How do you create a variable in Python?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'By writing variable before the name',
          'By using an equals sign (=) to store information',
          'By putting the information inside brackets',
          'By writing the name of the box',
        ]),
        correct_answer: 'By using an equals sign (=) to store information',
        hint: 'What connects a name to a value? ‚û°Ô∏è',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 77,
        lesson_id: 6,
        question: 'In this code, what is the name of the variable?\nphone = 1234567890',
        type: 'multiple_choice',
        options: JSON.stringify(['phone', '1234567890', '=', 'Both phone and 1234567890']),
        correct_answer: 'phone',
        hint: 'Which part is the label? üìû',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 78,
        lesson_id: 6,
        question: 'What will this code print?\nphone = 9876543210\nprint(phone)',
        type: 'multiple_choice',
        options: JSON.stringify(['9876543210', 'phone', 'Nothing', 'Error']),
        correct_answer: '9876543210',
        hint: 'What‚Äôs inside the box? üì±',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 79,
        lesson_id: 6,
        question: 'What symbol do we use to assign a value to a variable?',
        type: 'multiple_choice',
        options: JSON.stringify(['+', '=', '-', '*']),
        correct_answer: '=',
        hint: 'It‚Äôs not math, it‚Äôs assignment! ‚úèÔ∏è',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 80,
        lesson_id: 6,
        question: 'Why do we use variables in Python?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'To store information for later use',
          'To create graphics',
          'To make the computer run faster',
          'To write only math problems',
        ]),
        correct_answer: 'To store information for later use',
        hint: 'Why keep something handy? üóÉÔ∏è',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 81,
        lesson_id: 6,
        question: 'What happens when you write the name of a variable in your code?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'The computer understands it and retrieves the information stored inside',
          'The computer creates a new variable',
          'The computer deletes the variable',
          'The computer ignores it',
        ]),
        correct_answer: 'The computer understands it and retrieves the information stored inside',
        hint: 'What does the name unlock? üîë',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 82,
        lesson_id: 6,
        question: 'In this code, what is stored in the variable name?\nname = "Alice"',
        type: 'multiple_choice',
        options: JSON.stringify(['Alice', '"Alice"', 'name', 'Nothing']),
        correct_answer: '"Alice"',
        hint: 'What‚Äôs packed in the box? üéÅ',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 83,
        lesson_id: 6,
        question: 'Which of the following is an example of a variable assignment?',
        type: 'multiple_choice',
        options: JSON.stringify(['x = 5', '5 + 5', 'print(x)', 'True = False']),
        correct_answer: 'x = 5',
        hint: 'Look for a name and a value! üìù',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 84,
        lesson_id: 6,
        question: 'What does this code do?\ngame_score = 100\nprint(game_score)',
        type: 'multiple_choice',
        options: JSON.stringify(['Prints the value 100', 'Prints the value game_score', 'Prints nothing', 'Gives an error']),
        correct_answer: 'Prints the value 100',
        hint: 'What‚Äôs the score? üéÆ',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 85,
        lesson_id: 6,
        question: 'Can the name of a variable be used to get the information stored inside it?',
        type: 'multiple_choice',
        options: JSON.stringify(['True', 'False']),
        correct_answer: 'True',
        hint: 'Does the name have power? üí™',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 86,
        lesson_id: 6,
        question: 'What is the purpose of using variables in coding?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'To save information and use it later',
          'To make the code longer',
          'To create pictures',
          'To confuse the computer',
        ]),
        correct_answer: 'To save information and use it later',
        hint: 'Why keep things around? üï∞Ô∏è',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },
      {
        id: 87,
        lesson_id: 6,
        question: 'What will happen if you use a variable name that wasn‚Äôt assigned a value?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'The computer will give an error',
          'The computer will guess a value',
          'The computer will ignore it',
          'The computer will stop running',
        ]),
        correct_answer: 'The computer will give an error',
        hint: 'What if the box is empty? üì≠',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },
      {
        id: 88,
        lesson_id: 6,
        question: 'What will this code display?\nbox = "Chocolate"\nprint(box)',
        type: 'multiple_choice',
        options: JSON.stringify(['Chocolate', 'box', '"Chocolate"', 'Nothing']),
        correct_answer: 'Chocolate',
        hint: 'What‚Äôs inside the wrapper? üç´',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },

      // ==================================================
      // Section 1, Unit 3, Lesson 7 {1.3.7} - Naming Variables
      // ===================================================
      {
        id: 89,
        lesson_id: 7,
        question: 'Why is it important to use meaningful names for variables?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'To make the code easier to understand',
          'To save memory',
          'To make the computer run faster',
          'To use fewer letters',
        ]),
        correct_answer: 'To make the code easier to understand',
        hint: 'Who reads the code? üëÄ',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 90,
        lesson_id: 7,
        question: 'Which of the following is a correct variable name?',
        type: 'multiple_choice',
        options: JSON.stringify(['1st_name', 'first_name', 'first name', 'FirstName']),
        correct_answer: 'first_name',
        hint: 'What works smoothly in Python? üêç',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 91,
        lesson_id: 7,
        question: 'Can a variable name start with a number?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'Yes, always',
          'No, it must start with a letter',
          'Only if it contains a special symbol',
          'Only if the number is smaller than 10',
        ]),
        correct_answer: 'No, it must start with a letter',
        hint: 'What comes first in a name? üî§',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 92,
        lesson_id: 7,
        question: 'Which character is used to separate words in a variable name?',
        type: 'multiple_choice',
        options: JSON.stringify(['A space', 'An underscore (_)', 'A dash (-)', 'A period (.)']),
        correct_answer: 'An underscore (_)',
        hint: 'What joins words together? ü§ù',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 93,
        lesson_id: 7,
        question: 'Which of these is an incorrect variable name?',
        type: 'multiple_choice',
        options: JSON.stringify(['user1', 'total_score', 'score2', 'my score']),
        correct_answer: 'my score',
        hint: 'What breaks the rules? üö´',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 94,
        lesson_id: 7,
        question: 'What should you avoid when naming variables?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'Starting with a letter',
          'Using underscores',
          'Using spaces in the name',
          'Using lowercase letters',
        ]),
        correct_answer: 'Using spaces in the name',
        hint: 'What confuses Python? ü§î',
        level: 'easy',
        points: 5,
        created_at: new Date(),
      },
      {
        id: 95,
        lesson_id: 7,
        question: 'Which of the following is a meaningful variable name?',
        type: 'multiple_choice',
        options: JSON.stringify(['x', 'data1', 'phone_number', 'abc']),
        correct_answer: 'phone_number',
        hint: 'Which one tells a story? üìû',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 96,
        lesson_id: 7,
        question: 'What will happen if you name a variable with a space, like student name?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'The computer will ignore the space',
          'The computer will combine the words',
          'The computer will show an error',
          'The computer will replace the space with an underscore',
        ]),
        correct_answer: 'The computer will show an error',
        hint: 'Does Python like gaps? üö®',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 97,
        lesson_id: 7,
        question: 'Which of the following is a valid variable name in Python?',
        type: 'multiple_choice',
        options: JSON.stringify(['user_name2', '2username', 'User Name', 'user-name']),
        correct_answer: 'user_name2',
        hint: 'What follows the rules? ‚úÖ',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 98,
        lesson_id: 7,
        question: 'What is wrong with this variable name: Total-Score?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'It uses uppercase letters',
          'It starts with a special character',
          'It uses a dash (-) instead of an underscore (_)',
          'It contains numbers',
        ]),
        correct_answer: 'It uses a dash (-) instead of an underscore (_)',
        hint: 'What symbol is off-limits? üö´',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 99,
        lesson_id: 7,
        question: 'If you want to store the total number of students in a class, what is the best variable name?',
        type: 'multiple_choice',
        options: JSON.stringify(['number', 'class_students_total', 'studentNumber123', 'total']),
        correct_answer: 'class_students_total',
        hint: 'Which one explains it best? üë©‚Äçüè´',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },
      {
        id: 100,
        lesson_id: 7,
        question: 'What is the purpose of separating words in a variable name with an underscore (_) instead of using spaces?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'It helps the computer read the variable name correctly.',
          'It looks cooler.',
          'It makes the code run faster.',
          'Spaces are not allowed in variable names.',
        ]),
        correct_answer: 'Spaces are not allowed in variable names.',
        hint: 'Why can‚Äôt we just use a gap? ü§î',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 101,
        lesson_id: 7,
        question: 'Which of these is an invalid variable name in Python?',
        type: 'multiple_choice',
        options: JSON.stringify(['_score', 'student123', '123student', 'student_score']),
        correct_answer: '123student',
        hint: 'What‚Äôs out of order? üî¢',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 102,
        lesson_id: 7,
        question: 'Why should variable names be meaningful?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'To help the computer run the code faster.',
          'To make the code easier for humans to understand.',
          'To save memory space.',
          'To make the code look longer.',
        ]),
        correct_answer: 'To make the code easier for humans to understand.',
        hint: 'Who benefits from clear names? üßë‚Äçüíª',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },
      {
        id: 103,
        lesson_id: 7,
        question: 'What is the correct way to fix the following variable name?\nfirst name = "Alice"',
        type: 'multiple_choice',
        options: JSON.stringify([
          'first_name = "Alice"',
          'first-name = "Alice"',
          '4firstName = "Alice"',
          'First Name = "Alice"',
        ]),
        correct_answer: 'first_name = "Alice"',
        hint: 'How do we bridge the gap? üåâ',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 104,
        lesson_id: 7,
        question: 'Can a variable name contain uppercase letters?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'Yes, but lowercase is recommended for consistency.',
          'No, Python does not allow uppercase letters.',
          'Yes, but only for single-letter variables.',
          'No, it will cause an error.',
        ]),
        correct_answer: 'Yes, but lowercase is recommended for consistency.',
        hint: 'What‚Äôs the style tip? üî°',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 105,
        lesson_id: 7,
        question: 'What is wrong with this variable name: user-name123?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'It uses numbers.',
          'It uses a dash (-), which is not allowed.',
          'It does not follow camel case.',
          'It is not meaningful.',
        ]),
        correct_answer: 'It uses a dash (-), which is not allowed.',
        hint: 'What symbol trips Python up? üöß',
        level: 'medium',
        points: 7,
        created_at: new Date(),
      },
      {
        id: 106,
        lesson_id: 7,
        question: 'What happens if you use a Python keyword (like print or if) as a variable name?',
        type: 'multiple_choice',
        options: JSON.stringify([
          'The variable will work fine.',
          'Python will run but ignore the variable.',
          'Python will give an error.',
          'The keyword will change its meaning.',
        ]),
        correct_answer: 'Python will give an error.',
        hint: 'Can you borrow special words? üö´',
        level: 'hard',
        points: 10,
        created_at: new Date(),
      },


    ], {});
  },
  

  down: async (queryInterface, Sequelize) => {
    await queryInterface.bulkDelete('questions', null, {});
  }
};